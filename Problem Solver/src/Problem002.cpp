/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


#include "Problem002.h"
#include <string>
#include <iostream>

using namespace std;


Problem002::Problem002()
{
}

Problem002::~Problem002()
{
}
unsigned long long Problem002::setMaxFib(unsigned long long x)
{
	maxFib = x;
	return 0;
}

void Problem002::Solve()
{
    unsigned long long maxFib = 4000000;
	unsigned long long sum = 2;
	long long fib1 = 1;
	long long fib2 = 2;
	long long fib3;
	do{
		fib3 = fib1 + fib2;
		if (fib3 % 2 == 0){
			sum += fib3;
		}
		fib1 = fib2;
		fib2 = fib3;
	} while (fib3 < maxFib);

	cout << to_string(sum) << endl;;
}



